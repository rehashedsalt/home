#!/usr/bin/env bash

# Copyright (c) 2017 rehashedsalt/vintagesalt
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

## Patch path, if not already done
if [[ "$PATH" != "*$HOME/.local/bin*" ]]; then
	export PATH="$HOME/.local/bin:$PATH"
fi

## bspwm GENERAL CONFIGURATION
printf "[..] Setting up monitors\n"
monitors=$(bspc query -M | wc -l)
desktops=8
deskpermon=$(expr $desktops / $monitors)
i=1
printf "  [..] Putting $desktops desktops across $monitors monitors, $deskpermon each\n"
for monitor in $(bspc query -M); do
	until [[ "$(expr $i % \( $deskpermon + 1 \))" == "0" ]]; do
		layout="$layout $i"
		i=$(expr $i + 1)
	done
	printf "  [..] Giving monitor $monitor layout $layout\n"
	bspc monitor $monitor -d $layout
	layout="$i"
	i=$(expr $i + 1) 
done
unset layout
unset monitors
unset desktops
unset deskpermon

printf "[..] Configuring bspwm\n"
bspc config border_width	4
bspc config window_gap		6

bspc config split_ratio		0.50
bspc config borderless_monocle	true
bspc config gapless_monocle	true
bspc config remove_disabled_monitors	true
bspc config remove_unplugged_monitors	true

bspc config click_to_focus		any

bspc config pointer_follows_monitor	true
bspc config pointer_modifier		mod1
bspc config pointer_action1		move
bspc config pointer_action2		resize_corner

bspc config normal_border_color			"#3c3836"
bspc config active_border_color			"#a0a0a0"
bspc config focused_border_color		"#83a598"
bspc config presel_feedback_color		"#9b9b9b"

printf "[..] Setting window rules\n"
## bspwm WINDOW RULES
bspc rule -r '*'
bspc rule -a Waterfox desktop=1
bspc rule -a Discord desktop=7
bspc rule -a Spotify desktop=8
bspc rule -a 'Minecraft 1.7.10' state=fullscreen
# Plasma rules
bspc rule -a plasmashell state=floating sticky=on border=off
bspc rule -a krunner state=floating layer=above sticky=on border=off

printf "[..] Performing simple configuration\n"
## SIMPLE CONFIGURATION
xset -b
xset -dpms
xset s off
# This depends on a script found at rehashedsalt/bin
xrdbupdate

## SERVICES AND DAEMONS
feh --randomize --bg-fill ~/Pictures/Wallpapers/.active &
printf "[..] Killing existing daemons\n"
services="sxhkd polybar conky dunst compton"
for service in $services; do
	printf "  [..] Killing $service\n"
	killall $service
done
# Don't start the compositor in a VM
if [[ $(hostname) != "vm"* ]]; then
	printf "  [..] Starting compton\n"
	compton &
fi
# Different startup for OpenBSD and Linux
if [[ $(uname) == "Linux" ]]; then
	printf "[..] Starting Linux tasks\n"
	compton &
	$HOME/.config/polybar/start.sh &
	sxhkd &
else
	printf "[..] Starting OpenBSD tasks\n"
	sxhkd -c $XDG_CONFIG_HOME/sxhkd/sxhkdrc-obsd &
fi
# Start these all the time regardless of platform
printf "[..] Starting platform-independent tasks\n"
conky&
dunst&
printf "[..] Finished initialization\n"

